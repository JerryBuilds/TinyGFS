How our TinyFS project differs from GFS1. Record in the masterInstead of maintaining RID’s in chunkservers, we stored record metadata in Master. This gives Master more control, and client will not make any invalid requests to chunkserver if Master knows the record is not available to be read/write.2. createChunk()We move the createChunk command to Master. When Client sends appendRecord request to Master, since Master is aware of all record metadata in our design, Master is able to decide if there’s enough chunk space to append records. If not, Master will issue the createChunk to allocate new chunks and returns client the RID of the newly created chunks. 3. Structure of the namespace in MasterIn GFS, the namespace is maintained in a lookup table which maps a file path to the a list of chunks that this file contains. In our TinyFS project, we designed a tree structure where each node of the tree represent either a directory of a file. The root of the tree is the root directory. Each level of tree nodes corresponds to each level of the file path. We have helper functions which maps a given file path to the corresponding node in the tree. A new file or directory is added by adding a child node of the node of a given path, and is deleted by deleting that child node. We decided on this design because it is easier when renaming a directory name in the middle of a path, which saves the effort to recursively rename all the subdirectories and files within that directory.4. Selection of Primary ChunkserverThe primary chunkserver is picked by client in our design. The client randomly pick one chunkserver from all three replicas that are available as the “primary” chunkserver. If the picked “primary” chunkserver went down during client sending writing request that that chunkserver, the client will send same request again to the Master to get an updated version of chunkserver replicas.5. Heartbeat messagesIn our design, each chunkserver send messages to Master each time mutation happens to update the metadata stored in Master. In GFS, this update message is constantly sent between chunkserver and Master every “heartbeat”. 